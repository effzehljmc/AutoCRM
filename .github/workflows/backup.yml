name: Database Backup

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:  # Allow manual trigger

jobs:
  backup:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    env:
      SUPABASE_DB_HOST: aws-0-us-west-1.pooler.supabase.com
      SUPABASE_DB_PORT: 6543
      SUPABASE_DB_NAME: postgres
      SUPABASE_DB_USER: postgres.mcqydqmqundbzniedbcj

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Create backup directory
        run: mkdir -p backups

      - name: Create backup
        env:
          PGPASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          BACKUP_FILE="backups/backup_$(date +%Y%m%d_%H%M%S).sql"
          
          # Create plain SQL backup with schema and data
          pg_dump \
            -h $SUPABASE_DB_HOST \
            -p $SUPABASE_DB_PORT \
            -U $SUPABASE_DB_USER \
            -d $SUPABASE_DB_NAME \
            --table=public.roles \
            --table=public.profiles \
            --table=public.user_roles \
            --table=public.tickets \
            --table=public.kb_articles \
            > "$BACKUP_FILE"
          
          # Verify backup by checking its contents
          echo "Verifying backup contents..."
          echo "Tables in backup:"
          grep "CREATE TABLE" "$BACKUP_FILE"
          echo "Number of roles:"
          grep "INSERT INTO public.roles" "$BACKUP_FILE" | wc -l
          echo "Number of profiles:"
          grep "INSERT INTO public.profiles" "$BACKUP_FILE" | wc -l
          echo "Number of user_roles:"
          grep "INSERT INTO public.user_roles" "$BACKUP_FILE" | wc -l

      - name: Commit and push backup
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add backups/
          git commit -m "Database backup $(date +%Y-%m-%d_%H-%M-%S)"
          git push 